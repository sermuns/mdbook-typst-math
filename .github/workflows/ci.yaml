on:
  push:
    branches: [main]
    tags:
      - v*
  pull_request:
  workflow_dispatch:

name: CI Check and Publish

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Format
        run: cargo fmt --check
      - name: Check Clippy
        run: cargo clippy -- -D warnings

  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ".gz"
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            suffix: ".gz"
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ".gz"
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: ".gz"
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: ".exe"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        run: rustup target add ${{ matrix.target }}
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
      - name: Install Dependencies
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: sudo apt install -y gcc-aarch64-linux-gnu
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Compress and rename [-nix]
        if: ${{ matrix.os != 'windows-latest' }}
        run: gzip -c target/${{ matrix.target }}/release/mdbook-typst-math > mdbook-typst-math-${{ matrix.target }}${{ matrix.suffix }}
      - name: Rename [Windows]
        if: ${{ matrix.os == 'windows-latest' }}
        run: mv target/${{ matrix.target }}/release/mdbook-typst-math${{ matrix.suffix }} mdbook-typst-math-${{ matrix.target }}${{ matrix.suffix }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mdbook-typst-math-${{ matrix.target }}
          path: mdbook-typst-math-${{ matrix.target }}${{ matrix.suffix }}

  publish-crates:
    runs-on: ubuntu-latest
    needs: [check, build]

    steps:
      - uses: actions/checkout@v4
      - name: Publish to Crates.io
        uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          dry-run: ${{ github.ref_type != 'tag'}}
          ignore-unpublished-changes: ${{ github.ref_type != 'tag'}}

  publish-release:
    runs-on: ubuntu-latest
    needs: [build, publish-crates]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: List Artifacts
        run: ls -R artifacts
      - name: Setup | Release notes
        run: |
          git log -1 --pretty='%s' > RELEASE.md
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**
          body_path: RELEASE.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
